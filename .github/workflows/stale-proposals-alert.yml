name: Alerta Propostas Estagnadas

on:
  schedule:
    # Executa todos os dias às 9:00 BRT (12:00 UTC)
    - cron: '0 12 * * *'
  workflow_dispatch: # Permite execução manual

jobs:
  check-stale-proposals:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Stale Proposals
        env:
          SYSTEM_TOKEN: ${{ secrets.SYSTEM_TOKEN }}
          APP_URL: ${{ secrets.APP_URL }}
        run: |
          echo "Verificando propostas estagnadas há mais de 48h..."
          if [ -z "${SYSTEM_TOKEN}" ] || [ -z "${APP_URL}" ]; then
            echo "⚠️ Secrets SYSTEM_TOKEN ou APP_URL não configurados. Execução será marcada como sucesso para não quebrar pipeline."
            exit 0
          fi
          
          # Faz chamada para o endpoint de verificação
          response=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${SYSTEM_TOKEN}" \
            "${APP_URL}/api/proposals/stale-check")
          
          echo "Resposta da API: $response"
          
          # Verifica se a chamada foi bem-sucedida
          if echo "$response" | grep -q '"ok":true'; then
            notified=$(echo "$response" | sed -n 's/.*"notified":\([0-9]*\).*/\1/p')
            echo "✅ Verificação concluída. $notified propostas notificadas."
          else
            echo "❌ Erro na verificação de propostas estagnadas"
            echo "$response"
            # Não falhar hard se API temporariamente indisponível; retorna código neutro
            if echo "$response" | grep -qi 'connection refused\|timeout'; then
              echo "Marcando sucesso suave para evitar spam de falhas."
              exit 0
            else
              exit 1
            fi
          fi

      - name: Log Execution
        if: always()
        run: |
          echo "Execução do alerta de propostas estagnadas finalizada em $(date)"
