name: CI

on:
  push:
    branches: [ main, dev, testes ]
  pull_request:
    branches: [ main, dev, testes ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # Variáveis dummy para impedir falha de build Next.js por ausência de env
      NEXT_PUBLIC_SUPABASE_URL: "https://dummy.local"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "anon_dummy_key"
      SUPABASE_SERVICE_ROLE_KEY: "service_role_dummy"
      JWT_SECRET: "dev_dummy_jwt_secret_please_override"
      BCRYPT_ROUNDS: "12"
      CORS_ORIGINS: "http://localhost:3000"
      NEXT_TELEMETRY_DISABLED: "1"
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Yarn version
        run: yarn --version
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Show env (sanitized)
        run: |
          echo "Node $(node -v)";
          echo "Vars carregadas: NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL JWT_SECRET_LENGTH=${#JWT_SECRET}";
      - name: Type check (se houver arquivos TS)
        run: |
          if git ls-files '*.ts' '*.tsx' | grep -q '.'; then
            npx tsc --noEmit
          else
            echo 'Sem arquivos TypeScript, pulando type-check.'
          fi
      - name: Lint
        run: yarn lint
      - name: Tests (coverage)
        run: |
          npx vitest run --coverage --reporter=dot || { echo 'Falha em testes'; exit 1; }
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: coverage
            path: coverage
            if-no-files-found: ignore
  build:
    runs-on: ubuntu-latest
    needs: lint-test
    permissions:
      contents: read
    env:
      NEXT_PUBLIC_SUPABASE_URL: "https://dummy.local"
      NEXT_PUBLIC_SUPABASE_ANON_KEY: "anon_dummy_key"
      SUPABASE_SERVICE_ROLE_KEY: "service_role_dummy"
      JWT_SECRET: "dev_dummy_jwt_secret_please_override"
      BCRYPT_ROUNDS: "12"
      CORS_ORIGINS: "http://localhost:3000"
      NEXT_TELEMETRY_DISABLED: "1"
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Restore Next cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-${{ hashFiles('yarn.lock', 'app/**/*.[jt]s*', 'components/**/*.[jt]s*', 'lib/**/*.[jt]s*') }}
      - name: Build
        run: yarn build
      - name: Upload build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
          if-no-files-found: error
